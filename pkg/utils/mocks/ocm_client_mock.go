// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/configuration-anomaly-detection/pkg/ocm (interfaces: OcmClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/openshift/aws-account-operator/pkg/apis/aws/v1alpha1"
	v1 "github.com/openshift/hive/apis/hive/v1"
)

// MockOcmClient is a mock of OcmClient interface.
type MockOcmClient struct {
	ctrl     *gomock.Controller
	recorder *MockOcmClientMockRecorder
}

// MockOcmClientMockRecorder is the mock recorder for MockOcmClient.
type MockOcmClientMockRecorder struct {
	mock *MockOcmClient
}

// NewMockOcmClient creates a new mock instance.
func NewMockOcmClient(ctrl *gomock.Controller) *MockOcmClient {
	mock := &MockOcmClient{ctrl: ctrl}
	mock.recorder = &MockOcmClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOcmClient) EXPECT() *MockOcmClientMockRecorder {
	return m.recorder
}

// GetAWSAccountClaim mocks base method.
func (m *MockOcmClient) GetAWSAccountClaim(arg0 string) (*v1alpha1.AccountClaim, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAWSAccountClaim", arg0)
	ret0, _ := ret[0].(*v1alpha1.AccountClaim)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAWSAccountClaim indicates an expected call of GetAWSAccountClaim.
func (mr *MockOcmClientMockRecorder) GetAWSAccountClaim(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAWSAccountClaim", reflect.TypeOf((*MockOcmClient)(nil).GetAWSAccountClaim), arg0)
}

// GetClusterDeployment mocks base method.
func (m *MockOcmClient) GetClusterDeployment(arg0 string) (*v1.ClusterDeployment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterDeployment", arg0)
	ret0, _ := ret[0].(*v1.ClusterDeployment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterDeployment indicates an expected call of GetClusterDeployment.
func (mr *MockOcmClientMockRecorder) GetClusterDeployment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterDeployment", reflect.TypeOf((*MockOcmClient)(nil).GetClusterDeployment), arg0)
}
