// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/configuration-anomaly-detection/pkg/cad (interfaces: PagerDuty)

// Package cad is a generated GoMock package.
package cad

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPagerDuty is a mock of PagerDuty interface.
type MockPagerDuty struct {
	ctrl     *gomock.Controller
	recorder *MockPagerDutyMockRecorder
}

// MockPagerDutyMockRecorder is the mock recorder for MockPagerDuty.
type MockPagerDutyMockRecorder struct {
	mock *MockPagerDuty
}

// NewMockPagerDuty creates a new mock instance.
func NewMockPagerDuty(ctrl *gomock.Controller) *MockPagerDuty {
	mock := &MockPagerDuty{ctrl: ctrl}
	mock.recorder = &MockPagerDutyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPagerDuty) EXPECT() *MockPagerDutyMockRecorder {
	return m.recorder
}

// AddNote mocks base method.
func (m *MockPagerDuty) AddNote(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNote", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddNote indicates an expected call of AddNote.
func (mr *MockPagerDutyMockRecorder) AddNote(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNote", reflect.TypeOf((*MockPagerDuty)(nil).AddNote), arg0, arg1)
}

// MoveToEscalationPolicy mocks base method.
func (m *MockPagerDuty) MoveToEscalationPolicy(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MoveToEscalationPolicy", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// MoveToEscalationPolicy indicates an expected call of MoveToEscalationPolicy.
func (mr *MockPagerDutyMockRecorder) MoveToEscalationPolicy(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MoveToEscalationPolicy", reflect.TypeOf((*MockPagerDuty)(nil).MoveToEscalationPolicy), arg0, arg1)
}
